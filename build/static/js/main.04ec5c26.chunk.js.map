{"version":3,"sources":["components/HomeForm.js","services/fields.js","components/Fields.js","services/contests.js","components/Field.js","components/Header/ContestHeader.js","components/CreateAccountButton.js","components/Contest.js","components/Problems.js","services/submission.js","components/SubmissionForm/SimpleInput.js","components/SubmissionForm/JudgeForm.js","services/problems.js","components/Problem.js","components/Submission/MySubmissions.js","components/Submission/Submissions.js","components/Ranking/Ranking.js","services/rating.js","components/Rating/RatingTable.js","components/Rating/RatingGraph.js","components/Rating/RatingPage.js","components/Header/HeaderUser.js","components/Header/Header.js","services/login.js","components/LoginForm.js","services/signup.js","components/SignupForm.js","App.js","index.js"],"names":["HomeForm","history","useHistory","Jumbotron","Button","variant","onClick","event","preventDefault","push","getFields","a","axios","get","response","data","Fields","useState","fields","setFields","useEffect","then","res","handleClick","target","name","length","CardDeck","map","field","description","Card","style","width","Body","Title","Text","baseUrl","filterContests","Query","post","getContest","contestName","getRanking","register","Authorization","JSON","parse","localStorage","getItem","headers","unregister","Field","fieldName","fromTime","toTime","contests","setcontests","Table","striped","contest","to","ContestHeader","active","Nav","defaultActiveKey","Link","href","CreateAccountButton","Contest","setContest","isLogedIn","setIsLogedIn","registered","setRegistered","contestStarted","setContestStarted","storage","window","id","userid","newRegistered","ranking","filter","rank","Problems","problemNames","setProblemNames","bordered","scope","index","getUserSubmission","token","submit","submission","SimpleInput","problemName","onSubmit","answer","value","console","log","Form","Group","controlId","Control","as","rows","type","JudgeForm","judgeType","getProblem","Problem","problem","setProblem","problemStatement","MySubmissions","submissions","setSubmissions","reverse","Container","hover","className","Badge","Submissions","Alert","compare","b","point","submissionTime","Ranking","maxPage","setMaxPage","page","setPage","setRanking","visibleRanking","setVisibleRanking","handlePageMove","num","newPage","slice","sort","Math","ceil","min","getUserRating","RatingTable","rate","ratingData","datum","revPref","revRate","RatingGraph","rateData","concat","labels","toString","colors","background","i","colorData","color","datasets","borderColor","borderWidth","borderCapStyle","pointBorderColor","pointBackgroundColor","pointRadius","pointHitRadius","pointBorderWidth","label","fill","backgroundColor","graphData","graphOption","scales","x","beforeFit","offset","y","max","ticks","stepSize","plugins","legend","animation","duration","options","RatingPage","rating","setRating","setRate","r","revRateData","pref","floor","parseInt","Dropdown","Toggle","Menu","Item","newRate","HeaderUser","user","padding","Header","Navbar","collapseOnSelect","expand","bg","text","Brand","login","credentials","LoginForm","setUser","setMessage","password","loginService","setTimeout","setItem","stringify","Label","signup","SignupForm","confirmePassword","signupService","class","Users","App","message","matchField","useRouteMatch","params","matchContest","matchProblem","loggedUserJSON","startsWith","path","userData","messageData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04ec5c26.chunk.js","sourcesContent":["import {Jumbotron, Button } from 'react-bootstrap';\nimport { useHistory} from \"react-router-dom\";\n\nconst HomeForm = () => {\n  const history = useHistory();\n  const handleClick = (event) => {\n    event.preventDefault();\n    history.push(`/fields`);\n  }\n  return (\n    <Jumbotron>\n      <h1>Any Contest</h1>\n      <p>\n        このサイトでは様々なジャンルのコンテストを開催する予定です。早速ジャンル一覧を見てください！\n      </p>\n      <p>\n        <Button variant=\"primary\" onClick={handleClick}>ジャンル一覧へ</Button>\n      </p>\n    </Jumbotron>\n  )\n}\n\nexport default HomeForm;","import axios from 'axios'\nconst baseUrl = '/api/fields/'\n\nconst getFields = async () => {\n  const response = await axios.get(`${baseUrl}name`);\n  return response.data;\n}\n\nexport {getFields};","import { Card, Button, CardDeck } from 'react-bootstrap';\nimport { useHistory} from \"react-router-dom\";\nimport {getFields} from \"../services/fields\";\nimport { useState, useEffect } from \"react\";\n\nconst Fields = () => {\n  const history = useHistory();\n\n  const [fields, setFields] = useState([]);\n  useEffect(() => {\n    getFields().then(res => {\n      setFields(res);\n    });\n  }, []);\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    history.push(`/fields/${event.target.name}`);\n  }\n\n  if (fields.length === 0) {\n    return <p>Loading contests...</p>;\n  }\n  return (\n    <>\n    <h1>Contests</h1>\n    <CardDeck>\n    {\n      fields.map((field) => {\n        const name = field[0];\n        const description = field[1];\n        return (\n          <Card style={{ width: '16rem' }} key={name}>\n            {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n            <Card.Body>\n              <Card.Title>{name}</Card.Title>\n              <Card.Text>\n                {description}\n              </Card.Text>\n              <Button name={name} variant=\"primary\" onClick={handleClick}>コンテスト一覧へ</Button>\n            </Card.Body>\n          </Card>\n        )\n      }\n    )}\n    </CardDeck>\n    </>\n  );\n}\nexport default Fields;","import axios from 'axios'\nconst baseUrl = '/api/contests/'\n\nconst filterContests = async (Query) => {\n  const response = await axios.post(`${baseUrl}search_by_date`, Query);\n  return response.data;\n}\n\nconst getContest = async (contestName) => {\n  const response = await axios.get(`${baseUrl}${contestName}`);\n  return response.data;\n}\n\nconst getRanking = async (contestName) => {\n  const response = await axios.get(`${baseUrl}ranking/${contestName}`);\n  return response.data;\n}\n\nconst register = async (contestName) => {\n  const Authorization = `bearer ${JSON.parse(localStorage.getItem(\"loggedUser\"))[\"token\"]}`;\n  const response = await axios.post(`${baseUrl}register/`, {contestName: contestName}, {headers: { Authorization }});\n  return response.data;\n}\n\nconst unregister = async (contestName) => {\n  const Authorization = `bearer ${JSON.parse(localStorage.getItem(\"loggedUser\"))[\"token\"]}`;\n  const response = await axios.post(`${baseUrl}unregister/`, {contestName: contestName}, {headers: { Authorization }});\n  return response.data;\n}\n\nconst checkRegistered = async ({contestName, userid}) => {\n  const response = await axios.post(`${baseUrl}check_registered/`, {contestName: contestName, userid: userid});\n  return response.data;\n}\n\nexport {filterContests, getContest, getRanking, register, unregister, checkRegistered};","import { Table} from 'react-bootstrap';\nimport {Link } from \"react-router-dom\";\nimport {filterContests} from \"../services/contests\";\nimport { useState, useEffect } from \"react\";\n\nconst Field = ({fieldName}) => {\n  const Query = {\n    field: fieldName,\n    fromTime: \"2000-01-01 00:00:00\",\n    toTime: \"2100-00-00 00:00:00\"\n  }\n  const [contests, setcontests] = useState(null);\n  useEffect(() => {\n    filterContests(Query).then(res => setcontests(res));\n  },[]);\n  if (contests === null) {\n    return <p>Loading contests...</p>;\n  }\n  return (\n    <div>\n      <h2>{fieldName}</h2>\n      <Table striped>\n      <tbody>\n        {\n          contests.map(contest =>\n          <tr key={contest.name}>\n            <td>\n              <Link to={`/contests/${contest.name}`}>\n                {contest.name}\n              </Link>\n            </td>\n          </tr>\n          )\n        }\n      </tbody>\n      </Table>\n    </div>\n  )\n}\nexport default Field;","import {Nav } from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nconst ContestHeader = ({ contestName, active }) => {\n  return (\n    <Nav variant=\"tabs\" defaultActiveKey={`/contests/${contestName}`}>\n      <Nav.Link href={`/contests/${contestName}`} active={active===\"home\"}>home</Nav.Link>\n      <Nav.Link href={`/contests/${contestName}/problems`} active={active===\"problems\"}>problems</Nav.Link>\n      <Nav.Link href={`/contests/${contestName}/ranking`} active={active===\"ranking\"}>ranking</Nav.Link>\n      <Nav.Link href={`/contests/${contestName}/submissions`} active={active===\"submissions\"}>submissions</Nav.Link>\n    </Nav>\n  )\n}\n\nexport default ContestHeader;","import {Button } from 'react-bootstrap';\nimport { useHistory} from \"react-router-dom\";\n\nconst CreateAccountButton = () => {\n  const history = useHistory();\n  const handleClick = (event) => {\n    event.preventDefault();\n    history.push(`/signup`);\n  }\n  return (\n    <Button variant=\"primary\" onClick={handleClick}>\n      ユーザー登録する\n    </Button>\n  )\n}\n\nexport default CreateAccountButton;","import ContestHeader from \"./Header/ContestHeader\";\nimport { Jumbotron, Button } from 'react-bootstrap';\nimport {getContest, register, unregister} from \"../services/contests\";\nimport { useState, useEffect } from \"react\";\nimport CreateAccountButton from \"./CreateAccountButton\";\n\nconst Contest = ({ contestName }) => {\n  const [contest, setContest] = useState(null);\n  const [isLogedIn, setIsLogedIn] = useState(false);\n  const [registered, setRegistered] = useState(true);\n  const [contestStarted, setContestStarted] = useState(true);\n\n  const handleRegister = (event) => {\n    event.preventDefault();\n    register(contestName);\n    setRegistered(true);\n  }\n  const handleUnregister = (event) => {\n    event.preventDefault();\n    unregister(contestName);\n    setRegistered(false);\n  }\n\n  useEffect(() => {\n    getContest(contestName).then(res => {\n      setContest(res[0]);\n      const storage = JSON.parse(window.localStorage.getItem('loggedUser'));\n      if (storage !== null) {\n        const id = storage.userid;\n        const newRegistered = res[0].ranking.filter((rank) => rank.id === id).length === 0 ? false: true;\n        setRegistered(newRegistered);\n        setIsLogedIn(true);\n        setContestStarted(res[0][\"__v\"]);\n      }\n    });\n  },[]);\n  if (contest === null) {\n    return <div>Loading contests...</div>;\n  }\n  return (\n    <>\n      <ContestHeader contestName={contestName} active=\"home\"/>\n      <Jumbotron>\n        <h1>{contest.name}</h1>\n        <div>\n          {contest.description}\n        </div>\n        {!contestStarted && isLogedIn && !registered &&\n          <Button variant=\"primary\" onClick={handleRegister}>登録</Button>\n        }\n        {!contestStarted && isLogedIn && registered &&\n          <Button variant=\"secondary\" onClick={handleUnregister}>登録解除</Button>\n        }\n        {!isLogedIn &&\n          <CreateAccountButton />\n        }\n      </Jumbotron>\n    </>\n  )\n}\nexport default Contest;","import {Link} from \"react-router-dom\";\nimport { Table, Container} from 'react-bootstrap';\nimport {getContest} from \"../services/contests\";\nimport { useState, useEffect } from \"react\";\n\nimport ContestHeader from \"./Header/ContestHeader\";\n\nconst Problems = ({ contestName }) => {\n  const [problemNames, setProblemNames] = useState(null);\n  useEffect(() => {\n    getContest(contestName).then(res => setProblemNames(res[0][\"problemNames\"]));\n  },[]);\n  if (problemNames === null) {\n    return <p>Loading contests...</p>;\n  }\n  return (\n    <div>\n    <ContestHeader contestName={contestName} active=\"problems\"/>\n    <Table bordered>\n    <thead>\n      <tr>\n        <th scope=\"col\"> </th>\n        <th scope=\"col\">問題名</th>\n      </tr>\n    </thead>\n    <tbody>\n      {problemNames.map((name, index) =>\n        <tr key={name}>\n          <th scope=\"row\">{index}</th>\n          <td>\n            <Link to={`/problems/${name}`}>\n              {name}\n            </Link>\n          </td>\n        </tr>\n      )}\n    </tbody>\n    </Table>\n    </div>\n  )\n}\nexport default Problems;","import axios from 'axios'\nconst baseUrl = '/api/submissions/'\n\nconst getUserSubmission = async () => {\n  const storage = JSON.parse(localStorage.getItem(\"loggedUser\"));\n  if (storage === null) {\n    return [];\n  }\n  const Authorization = `bearer ${storage.token}`;\n  const response = await axios.post(`${baseUrl}userid/`, {}, { headers: { Authorization }});\n  return response.data;\n}\n\nconst submit = async (submission) => {\n  const Authorization = `bearer ${JSON.parse(localStorage.getItem(\"loggedUser\"))[\"token\"]}`;\n  const response = await axios.post(baseUrl, submission,  { headers: { Authorization } });\n  return response.data;\n}\n\nexport {getUserSubmission, submit};","import { Form, Button } from 'react-bootstrap';\nimport {useHistory} from \"react-router-dom\";\nimport {submit} from \"../../services/submission\";\nimport { useState, useEffect } from \"react\";\nimport CreateAccountButton from \"../CreateAccountButton\";\n\n\nconst SimpleInput = ({contestName, problemName}) => {\n  const history = useHistory();\n  const [isLogedIn, setIsLogedIn] = useState(false);\n\n  useEffect(() => {\n    const storage = JSON.parse(window.localStorage.getItem('loggedUser'));\n    if (storage !== null) {\n      setIsLogedIn(true);\n    }\n  },[]);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const answer = event.target[0].value;\n\n    try {\n      const submission = await submit({\n        problemName: problemName,\n        contestName: contestName,\n        answer: answer\n      });\n      history.push(`/contests/${contestName}/submissions`);\n    } \n    catch (exception) {\n      console.log(\"err\");\n    }\n  }\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n        <h4>入力欄</h4>\n        <Form.Control as=\"textarea\" rows={1} />\n        {isLogedIn &&\n          <Button variant=\"primary\" type=\"submit\">\n              提出\n          </Button>\n        }\n        {!isLogedIn &&\n          <CreateAccountButton />\n        }\n      </Form.Group>\n    </Form>\n  )\n}\n\nexport default SimpleInput;","import SimpleInput from \"./SimpleInput\";\n\nconst JudgeForm = ({judgeType, contestName, problemName}) => {\n  if (judgeType === \"SimpleInput\") {\n    return <SimpleInput contestName={contestName} problemName={problemName}/>;\n  }\n  else {\n    return <div>error</div>;\n  }\n}\n\nexport default JudgeForm;","import axios from 'axios'\nconst baseUrl = '/api/problems/'\n\nconst getProblem = async (problemName) =>\n{\n  const response = await axios.get(`${baseUrl}${problemName}`);\n  return response.data;\n}\n\nexport {getProblem};","import ContestHeader from \"./Header/ContestHeader\";\nimport JudgeForm from \"./SubmissionForm/JudgeForm\";\nimport {getProblem} from \"../services/problems\";\nimport { useState, useEffect } from \"react\";\n\nconst Problem = ({problemName}) => {\n  const [problem, setProblem] = useState(null);\n  useEffect(() => {\n    getProblem(problemName).then(res => setProblem(res[0]));\n  },[]);\n  if (problem === null) {\n    return <p>Loading contests...</p>;\n  }\n  return (\n    <div>\n      <ContestHeader contestName={problem.contest} />\n      <h1>\n        {problem.name}\n      </h1>\n      <h4>\n        以下の問題分を入力欄に打ち込んでください。\n      </h4>\n      {problem.problemStatement}\n      <JudgeForm judgeType={problem.judgeType} contestName={problem.contest} problemName={problemName}/>\n    </div>\n  )\n}\n\nexport default Problem;","import { Table, Container, Badge } from 'react-bootstrap';\nimport {getUserSubmission} from \"../../services/submission\";\nimport { useState, useEffect } from \"react\";\nimport ContestHeader from \"../Header/ContestHeader\";\n\nconst MySubmissions = ({contestName}) => {\n\n  const [submissions, setSubmissions] = useState(null);\n  useEffect(() => {\n    getUserSubmission()\n      .then(res => {\n        setSubmissions(res.filter((submission => submission.contestName === contestName)).reverse());\n      });\n  }, []);\n\n  if (submissions === null) {\n    return (\n      <div>\n      Loading contests...\n      </div>\n    )\n  }\n  if (submissions.length === 0) {\n    return (\n      <div>\n      提出はありません\n      </div>\n    )\n  }\n  return (\n    <Container>\n      <Table bordered hover>\n        <thead>\n          <tr>\n            <th>problem</th>\n            <th>answer</th>\n            <th>state</th>\n            <th>time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            submissions.map((submission, index) => \n              <tr key={index} className={index === 0 ? (submission[\"state\"]===\"OK\"? \"table-success\": \"table-danger\"): \"table-light\"}>\n                <td>{submission[\"problemName\"]}</td>\n                <td>{submission[\"answer\"]}</td>\n                <td><Badge variant={submission[\"state\"]===\"OK\"? \"success\": \"danger\"} > {submission[\"state\"]} </Badge> </td>\n                <td>{submission[\"time\"]}</td>\n              </tr>\n            )\n          }\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\n\nexport default MySubmissions;","import {Alert } from 'react-bootstrap';\nimport ContestHeader from \"../Header/ContestHeader\";\nimport MySubmissions from \"./MySubmissions\";\n\nconst Submissions = ({contestName}) => {\n  return (\n    <div>\n      <ContestHeader contestName={contestName} active=\"submissions\"/>\n      <Alert variant=\"danger\">\n        現在自分の提出しか見られない仕様になっています。\n      </Alert>\n      <MySubmissions contestName={contestName} />\n    </div>\n  )\n}\n\nexport default Submissions;","import React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport ContestHeader from \"../Header/ContestHeader\";\nimport {getRanking} from \"../../services/contests\";\n\nconst numShow = 20;\nconst compare = (a, b) => {\n  if (a.point === b.point) {\n    if (a.submissionTime === b.submissionTime) {\n      return 0;\n    }\n    if (a.submissionTime > b.submissionTime) {\n      return 1;\n    }\n    else {\n      return -1;\n    }\n  }\n  return b.point - a.point;\n}\n\nconst Ranking = ({ contestName }) => {\n  const [maxPage, setMaxPage] = useState(0);\n  const [page, setPage] = useState(1);\n  const [ranking, setRanking] = useState(null);\n  const [visibleRanking, setVisibleRanking] = useState(null);\n\n  const handlePageMove = (num) => {\n    const newPage = page + num;\n    setPage(newPage);\n    setVisibleRanking(ranking.slice((newPage - 1) * numShow, newPage * numShow));\n  }\n\n  useEffect(\n    () => {\n      getRanking(contestName).then((res) => {\n        res.sort(compare);\n        setRanking(res);\n        setMaxPage(Math.ceil(res.length / numShow));\n        setVisibleRanking(res.slice(0, Math.min(numShow, res.length)));\n      });\n    },\n    []\n  )\n\n  if (visibleRanking === null) {\n    return (\n      <>\n      <ContestHeader contestName={contestName} />\n      <div>Loading contests...</div>\n      </>\n    )\n  }\n  if (visibleRanking.length === 0) {\n    return (\n      <>\n      <ContestHeader contestName={contestName} />\n      <div>参加者は居ません</div>\n      </>\n    )\n  }\n  return (\n    <>\n    <ContestHeader contestName={contestName} active=\"ranking\"/>\n    {page !== 1 && \n      <input type=\"button\" onClick={() => handlePageMove(-1)} value=\"previous page\" />\n    }\n    {page !== maxPage && \n      <input type=\"button\" onClick={() => handlePageMove(1)} value=\"next page\" />\n    }\n    <Table bordered hover>\n      <thead>\n        <tr>\n          <th>rank</th>\n          <th>username</th>\n          <th>score</th>\n          <th>time</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          visibleRanking.map((rank, index) => \n            <tr key={index}>\n              <td>{(page - 1) * numShow + index + 1}</td>\n              <td>{rank[\"name\"]}</td>\n              <td>{rank[\"point\"]}</td>\n              <td>{rank[\"submissionTime\"]}</td>\n            </tr>\n          )\n        }\n      </tbody>\n    </Table>\n    </>\n  )\n}\n\nexport default Ranking;","import axios from 'axios'\nconst baseUrl = '/api/ratings/'\n\nconst getQuery = async (query) => {\n  const response = await axios.post(`${baseUrl}query/`, query);\n  return response.data;\n}\n\nconst getUserRating = async (userid) => {\n  const response = await axios.get(`${baseUrl}userid/${userid}`)\n  return response.data;\n}\n\nexport {getUserRating, getQuery};","import { Table} from 'react-bootstrap';\n\nconst RatingTable = ({rate}) => {\n  return (\n    <>\n    <Table bordered hover>\n    <thead>\n      <tr>\n        <th>num</th>\n        <th>contest</th>\n        <th>performance</th>\n        <th>rating</th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n        rate.ratingData.map((datum, index) => {\n          return (\n            <tr key={datum.contestName}>\n              <td>{rate.ratingData.length - index}</td>\n              <td>{datum[\"contestName\"]}</td>\n              <td>{rate.revPref[index]}</td>\n              <td>{rate.revRate[index]}</td>\n            </tr>\n          )\n        })\n      }\n    </tbody>\n    </Table>\n    </>\n  )\n}\nexport default RatingTable;","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst RatingGraph = ({rate}) => {\n  const rateData = [0].concat(rate.revRate.slice().reverse());\n  const labels = [''];\n  for (let index = 1; index <= rateData.length; index++) {\n    if (index === 1 || index % 5 === 0) {\n      labels.push(index.toString());\n    }\n    else {\n      labels.push('');\n    }\n  }\n  labels.push('');\n  const colors = ['rgba(90, 90, 90, 1)', 'rgba(205, 205, 205, 1)', 'rgba(250, 217, 174, 1)', 'rgba(163, 239, 170, 1)', 'rgba(192, 255, 243, 1)', 'rgba(109, 129, 255, 1)', 'rgba(246, 255, 139, 1)', 'rgba(255, 165, 58, 1)', 'rgba(255, 119, 119, 1)'];\n  const background = [];\n  for (let i = 0; i < colors.length; i++) {\n    const colorData = [];\n    for (let index = 0; index < rateData.length + 2; index++) {\n      if (i === colors.length - 1) {\n        colorData.push(5000);\n      }\n      else {\n        colorData.push((i + 1) * 400);\n      }\n    }\n    background.push({colorData: colorData, color: colors[i]});\n  }\n\n  const datasets = [];\n  datasets.push(\n    {\n      type: 'line',\n      borderColor: 'rgba(255, 255, 255, 1)',\n      borderWidth: 3,\n      borderCapStyle: 'round',\n      pointBorderColor: 'rgba(0, 0, 0, 1)',\n      pointBackgroundColor: 'rgba(255, 255, 255, 1)',\n      data: rateData,\n      pointRadius: 4,\n      pointHitRadius: 0,\n      pointBorderWidth: 1,\n      label: \"rate\",\n    }\n  );\n  for (let index = 0; index < background.length; index++) {\n    datasets.push(\n      {\n        type: 'line',\n        data: background[index]['colorData'],\n        fill: true,\n        borderWidth: 0,\n        pointRadius: 0,\n        backgroundColor: background[index]['color'],\n        label: background[index]['color'],\n      }\n    );\n  }\n\n  /** グラフデータ */\n  const graphData = {\n    labels: labels,\n    datasets: datasets,\n  };\n\n  /** グラフオプション */\n  const graphOption = {\n    scales: {\n      x: {\n        beforeFit: true,\n        offset: false,\n      },\n      y: {\n        min: 0,\n        max: Math.ceil(Math.max(...rateData) / 200) * 200 + 200,\n        ticks: {\n          stepSize: 400\n        }\n      },\n    },\n    plugins: {\n      legend: false,\n    },\n    animation: {\n      duration: 0,\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* グラフコンポーネントの呼び出し */}\n      <Bar data={graphData} options={graphOption} />\n    </div>\n  );\n}\n\nexport default RatingGraph;","import { Dropdown } from 'react-bootstrap';\nimport { useState, useEffect } from \"react\";\nimport {getUserRating} from \"../../services/rating\";\nimport RatingTable from \"./RatingTable\";\nimport RatingGraph from \"./RatingGraph\";\n\nconst RatingPage = () => {\n  const [rating, setRating] = useState(null);\n  const [rate, setRate] = useState(null);\n  const storage = JSON.parse(window.localStorage.getItem('loggedUser'));\n  useEffect(() => {\n    if (storage !== null) {\n      const userid = storage.userid;\n      getUserRating(userid)\n        .then(res => {\n          res.map((r) => {\n            const revRateData = r.ratingData.slice().reverse();\n            const revPref = [];\n            const revRate = [];\n            for (let index = revRateData.length - 1; index >= 0; index--) {\n              const datum = revRateData[index];\n              if (index === revRateData.length - 1) {\n                const pref = Math.floor((parseInt(datum[\"rating\"]) + 400) * 4 - (1500 + 400) * 3);\n                const rating = Math.floor(Math.max(datum.rating * (revRateData.length - index) / 5, Math.min(datum.rating, Math.max(0, pref / 4) + 400 / 5)));\n                revPref.push(pref);\n                revRate.push(rating);\n              }\n              else if (index >= revRateData.length - 5) {\n                const pref = Math.floor((parseInt(datum[\"rating\"]) + 400) * 4 - (parseInt(revRateData[index + 1][\"rating\"]) + 400) * 3);\n                const rating = Math.floor(Math.max(datum.rating * (revRateData.length - index) / 5, Math.min(datum.rating, Math.max(0, (pref + revRate[revRate.length - 1] * 3) / 4) + 400 * (revRateData.length - index) / 5)));\n                revPref.push(pref);\n                revRate.push(rating);\n              }\n              else {\n                const pref = Math.floor(parseInt(datum[\"rating\"]) * 4 - parseInt(revRateData[index + 1][\"rating\"]) * 3) + 400;\n                const rating = Math.floor(datum.rating) + 400;\n                revPref.push(pref);\n                revRate.push(rating);\n              }\n            }\n            revPref.reverse();\n            revRate.reverse();\n            r.revPref = revPref;\n            r.revRate = revRate;\n            return r;\n          })\n          setRating(res);\n          setRate(res[0]);\n      });\n    }\n  }, []);\n\n  if (rating === null || rate === null) {\n    return (\n      <div>\n      Loading contests...\n      </div>\n    )\n  }\n  if (rating.length === 0) {\n    return (\n      <div>\n      ユーザー登録してください\n      </div>\n    )\n  }\n\n  const handleClick = (num) => {\n    let newRate = rating[num];\n    setRate(newRate);\n  }\n\n  return (\n    <>\n    <Dropdown>\n      <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n        コンテストを選ぶ\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        {\n          rating.map((rate, index) => {\n            return (\n              <Dropdown.Item onClick={() => handleClick(index)} key={rate.fieldName}> {rate.fieldName} </Dropdown.Item>\n            )\n          })\n        }\n      </Dropdown.Menu>\n    </Dropdown>\n    <h1>{rate.fieldName}</h1>\n    <RatingGraph rate={rate} />\n    <RatingTable rate={rate} />\n    </>\n  )\n}\n\nexport default RatingPage;","import {Nav } from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nconst HeaderUser = ({ user, style }) => {\n  if (user.name) {\n    return (\n      <em style={style}>{user.name}</em>\n    );\n  }\n  else {\n    return (\n      <Nav.Link href=\"#\" as=\"span\">\n        <Link to=\"/signup\" style={style}>signup</Link>\n        <Link to=\"/login\" style={style}>login</Link>\n      </Nav.Link>\n    );\n  }\n}\nexport default HeaderUser;","import {Navbar, Nav } from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nimport HeaderUser from \"./HeaderUser\";\n\nconst style = {\n  padding: 5,\n  color: \"white\",\n}\n\nconst Header = ({user}) => {\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" text=\"light\">\n      <Navbar.Brand href=\"/\">Any Contest</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"#\" as=\"span\">\n          <Link style={style} to=\"/fields\">contests</Link>\n          <Link style={style} to=\"/rating\">rating</Link>\n        </Nav.Link>\n      </Nav>\n      <Nav>\n        <HeaderUser user={user} style={style} />\n      </Nav>\n    </Navbar>\n  )\n}\n\nexport default Header;","import axios from 'axios'\nconst baseUrl = '/api/login/'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data;\n}\n\nexport default login;","import {useHistory} from \"react-router-dom\";\nimport {Form, Button} from 'react-bootstrap';\nimport React from 'react';\nimport loginService from \"../services/login\";\n\nconst LoginForm = ({setUser, setMessage}) => {\n  const history = useHistory();\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const id = event.target[0].value;\n    const password = event.target[1].value;\n\n    try {\n      const user = await loginService({\n        id, password,\n      });\n\n      setMessage(`Success: welcome ${id}`);\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      )\n\n      setUser({id: id, name: user.name});\n      setMessage(`Success: welcome ${user.name}`);\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n      history.push('/');\n    } \n    catch (exception) {\n      setMessage('Error: wrong credentials')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>login</h2>\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <Form.Label>id:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"id\"\n          />\n          <Form.Label>password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n          />\n          <Button variant=\"primary\" type=\"submit\">\n            login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm;","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst signup = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data;\n}\n\nexport default signup;","import {useHistory} from \"react-router-dom\";\nimport {Form, Button} from 'react-bootstrap';\nimport React from 'react';\nimport signupService from \"../services/signup\";\n\nconst SignupForm = ({setUser, setMessage}) => {\n  const history = useHistory();\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const id = event.target[0].value;\n    const name = event.target[1].value;\n    const password = event.target[2].value;\n    const confirmePassword = event.target[3].value;\n    if (password !== confirmePassword) {\n      setMessage('Error: 入力されたパスワードが一致しません');\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n      return;\n    }\n    try {\n      const user = await signupService({\n        id, password, name\n      });\n      setUser({id: id, name: name});\n      setMessage(`Success: welcome ${name}`);\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000);\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      )\n      history.push('/');\n    }\n    catch (exception) {\n      setMessage('Error: アカウントを作成出来ませんでした、違うidを試してみてください')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>signup</h2>\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <Form.Label>id:</Form.Label><span class=\"text-danger\">※登録後idは変更出来ません</span>\n          <Form.Control\n            type=\"text\"\n            name=\"id\"\n          />\n          <Form.Label>user name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n          />\n          <Form.Label>password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n          />\n          <Form.Label>confirme password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n          />\n          <Button variant=\"primary\" type=\"submit\">\n            login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\nimport { Alert, Container } from 'react-bootstrap';\n\nimport {\n  Switch,\n  Route,\n  Redirect,\n  useRouteMatch,\n} from \"react-router-dom\";\n\nimport HomeForm from \"./components/HomeForm\";\nimport Fields from \"./components/Fields\";\nimport Field from \"./components/Field\";\nimport Contest from \"./components/Contest\";\nimport Problems from \"./components/Problems\";\nimport Problem from \"./components/Problem\";\nimport Submissions from \"./components/Submission/Submissions\";\nimport Ranking from \"./components/Ranking/Ranking\";\nimport RatingPage from \"./components/Rating/RatingPage\";\nimport Header from './components/Header/Header';\nimport LoginForm from './components/LoginForm';\nimport SignupForm from './components/SignupForm';\n\nconst Users = () => (\n  <div>\n    <h2>TKTL notes app</h2>\n    <ul>\n      <li>Matti Luukkainen</li>\n      <li>Juha Tauriainen</li>\n      <li>Arto Hellas</li>\n    </ul>\n  </div>\n)\n\nconst App = () => {\n  const [user, setUser] = useState({});\n  const [message, setMessage] = useState(null);\n\n  \n  const matchField = useRouteMatch('/fields/:field');\n  const fieldName = matchField ? matchField.params.field: null;\n  \n  const matchContest = useRouteMatch('/contests/:contest');\n  const contestName = matchContest ? matchContest.params.contest: null;\n\n  const matchProblem = useRouteMatch('/problems/:problem');\n  const problemName = matchProblem ? matchProblem.params.problem: null;\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n    }\n  }, [])\n\n  return (\n    <div>\n        {(message && message.startsWith(\"Success:\") && \n          <Alert variant=\"success\">\n            {message}\n          </Alert>\n        )}\n        {(message && message.startsWith(\"Error:\") && \n          <Alert variant=\"danger\">\n            {message}\n          </Alert>\n        )}\n      \n      <Header user={user} />\n      <Container>\n        <Switch>\n          <Route path=\"/fields/:field\">\n            <Field fieldName={fieldName} />\n          </Route>\n          <Route path=\"/contests/:contest/problems\">\n            <Problems contestName={contestName} />\n          </Route>\n          <Route path=\"/contests/:contest/submissions\">\n            <Submissions contestName={contestName} />\n          </Route>\n          <Route path=\"/contests/:contest/ranking\">\n            <Ranking contestName={contestName}/>\n          </Route>\n          <Route path=\"/contests/:contest\">\n            <Contest contestName={contestName} />\n          </Route>\n          <Route path=\"/problems/:problem\">\n            <Problem problemName={problemName} />\n          </Route>\n          <Route path=\"/fields\">\n            <Fields />\n          </Route>\n          <Route path=\"/users\">\n            {user ? <Users /> : <Redirect to=\"/login\" />}\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm setUser={(userData) => setUser(userData)} setMessage={(messageData) => setMessage(messageData)} />\n          </Route>\n          <Route path=\"/signup\">\n            <SignupForm setUser={(userData) => setUser(userData)} setMessage={(messageData) => setMessage(messageData)} />\n          </Route>\n          <Route path=\"/rating\">\n            <RatingPage />\n          </Route>\n          <Route path=\"/\">\n            <HomeForm />\n          </Route>\n        </Switch>\n        <div>\n          <br />\n          <em>kuso app</em>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport {BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}