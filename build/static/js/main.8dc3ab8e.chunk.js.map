{"version":3,"sources":["components/HomeForm.js","services/fields.js","components/Fields.js","services/contests.js","components/Field.js","components/Header/ContestHeader.js","components/CreateAccountButton.js","components/Contest.js","components/Problems.js","services/submission.js","components/SubmissionForm/SimpleInput.js","components/SubmissionForm/JudgeForm.js","services/problems.js","components/Problem.js","components/Submission/MySubmissions.js","components/Submission/Submissions.js","components/Ranking/Ranking.js","components/Ranking/ContestRankingPage.js","services/rating.js","components/Rating/RatingTable.js","components/Rating/RatingGraph.js","components/Rating/RatingPage.js","components/Header/HeaderUser.js","components/Header/Header.js","services/login.js","components/LoginForm.js","services/signup.js","components/SignupForm.js","services/CreateContest/checkContest.js","services/CreateContest/saveData.js","services/answers.js","services/CreateContest/uploadProblem.js","components/CreateContest/CreateContestForm.js","components/CreateContest/SelectContest.js","components/CreateProblem/CreateProblem.js","App.js","index.js"],"names":["HomeForm","history","useHistory","Jumbotron","Button","variant","onClick","event","preventDefault","push","getFields","a","axios","get","response","data","Fields","useState","isLogedIn","setIsLogedIn","fields","setFields","useEffect","then","res","JSON","parse","window","localStorage","getItem","handleClick","target","name","length","CardDeck","map","field","description","Card","style","width","Body","Title","Text","paddingTop","block","baseUrl","filterContests","Query","post","getContest","contestName","makeContest","contestDate","storage","Authorization","token","headers","getRanking","register","unregister","Field","fieldName","fromTime","toTime","contests","setcontests","Table","striped","contest","to","ContestHeader","active","Nav","defaultActiveKey","Link","href","CreateAccountButton","Contest","setContest","registered","setRegistered","contestStarted","setContestStarted","id","userid","newRegistered","ranking","filter","rank","startTime","substring","endTime","Problems","problemNames","setProblemNames","bordered","scope","index","getUserSubmission","submit","submission","SimpleInput","problemName","onSubmit","answer","value","console","log","marginTop","fontWeight","Form","Group","controlId","Control","as","rows","type","JudgeForm","judgeType","getProblem","createProblem","problemData","Problem","problem","setProblem","problemStatement","MySubmissions","submissions","setSubmissions","reverse","Container","hover","className","Badge","Submissions","Alert","Ranking","page","setPage","slice","Math","min","visibleRanking","setVisibleRanking","maxPage","ceil","handlePageMove","num","newPage","compare","b","point","submissionTime","ContestRanking","setRanking","sort","getUserRating","RatingTable","rate","ratingData","datum","revPref","revRate","RatingGraph","rateData","concat","labels","toString","colors","background","i","colorData","color","datasets","borderColor","borderWidth","borderCapStyle","pointBorderColor","pointBackgroundColor","pointRadius","pointHitRadius","pointBorderWidth","label","fill","backgroundColor","graphData","graphOption","scales","x","beforeFit","offset","y","max","ticks","stepSize","plugins","legend","animation","duration","options","RatingPage","userName","rating","setRating","setRate","setUserid","onChange","r","revRateData","pref","floor","parseInt","Label","defaultValue","Dropdown","Toggle","Menu","Item","newRate","HeaderUser","user","padding","Header","Navbar","collapseOnSelect","expand","bg","text","Brand","login","credentials","LoginForm","setUser","setMessage","password","loginService","setTimeout","setItem","stringify","signup","SignupForm","confirmePassword","signupService","class","checkField","checkContestName","contestAlreadyCreated","checkDate","day","Date","checkProblem","writer","checkContest","problemsUnique","fixTime","time","TimeToString","year","month","hour","sec","saveData","setContests","contestDescription","newContest","minRating","maxRating","maxperformance","writers","penalty","newContests","createAnswer","answerData","uploadProblem","Data","CreateContest","setContestAlreadyCreated","newProblems","newProblemNames","innerHTML","nativeEvent","submitter","forEach","handlePost","placeholder","Row","Col","column","lg","float","SelectContest","CreateProblem","problems","setProblems","filteredProblems","setContestName","newProblem","already","prob","row","Users","App","message","matchField","useRouteMatch","params","matchContest","matchProblem","matchCreateContest","createContestName","matchCreateProblem","createProblemName","matchUserName","ratingUserName","loggedUserJSON","startsWith","path","userData","messageData","CreateContestForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dc3ab8e.chunk.js","sourcesContent":["import {Jumbotron, Button } from 'react-bootstrap';\nimport { useHistory} from \"react-router-dom\";\n\nconst HomeForm = () => {\n  const history = useHistory();\n  const handleClick = (event) => {\n    event.preventDefault();\n    history.push(`/fields`);\n  }\n  return (\n    <Jumbotron>\n      <h1>Any Contest</h1>\n      <p>\n        このサイトでは様々なジャンルのコンテストを開催する予定です。早速ジャンル一覧を見てください！\n      </p>\n      <p>\n        <Button variant=\"primary\" onClick={handleClick}>ジャンル一覧へ</Button>\n      </p>\n    </Jumbotron>\n  )\n}\n\nexport default HomeForm;","import axios from 'axios'\nconst baseUrl = '/api/fields/'\n\nconst getFields = async () => {\n  const response = await axios.get(`${baseUrl}name`);\n  return response.data;\n}\n\nexport {getFields};","import { Card, Button, CardDeck } from 'react-bootstrap';\nimport { useHistory} from \"react-router-dom\";\nimport {getFields} from \"../services/fields\";\nimport { useState, useEffect } from \"react\";\n\nconst Fields = () => {\n  const history = useHistory();\n  const [isLogedIn, setIsLogedIn] = useState(false);\n\n  const [fields, setFields] = useState([]);\n  useEffect(() => {\n    getFields().then(res => {\n      setFields(res);\n    });\n    const storage = JSON.parse(window.localStorage.getItem('loggedUser'));\n    if (storage !== null) {\n      setIsLogedIn(true);\n    }\n  }, []);\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    history.push(`/fields/${event.target.name}`);\n  }\n\n  const makeContest = (event) => {\n    event.preventDefault();\n    history.push(\"/create_contest\");\n  }\n\n  const makeAccount = (event) => {\n    event.preventDefault();\n    history.push(\"/signup\");\n  }\n\n  if (fields.length === 0) {\n    return <p>Loading contests...</p>;\n  }\n  return (\n    <>\n    <h1>Contests</h1>\n    <CardDeck>\n    {\n      fields.map((field) => {\n        const name = field[0];\n        const description = field[1];\n        return (\n          <Card style={{ width: '16rem' }} key={name}>\n            <Card.Body>\n              <Card.Title>{name}</Card.Title>\n              <Card.Text>\n                {description}\n              </Card.Text>\n              <Button name={name} variant=\"primary\" onClick={handleClick}>コンテスト一覧へ</Button>\n            </Card.Body>\n          </Card>\n        )\n      }\n    )}\n    </CardDeck>\n    {isLogedIn &&\n      <div style={{paddingTop:20}}>\n        <Button onClick={makeContest} variant=\"outline-primary\" block>コンテストを作る</Button>{' '}\n      </div>\n    }\n    {!isLogedIn &&\n      <div style={{paddingTop:20}}>\n        <Button onClick={makeAccount} variant=\"outline-primary\" block>コンテストを作る</Button>{' '}\n      </div>\n    }\n    </>\n  );\n}\nexport default Fields;","import axios from 'axios'\nconst baseUrl = '/api/contests/'\n\nconst filterContests = async (Query) => {\n  const response = await axios.post(`${baseUrl}search_by_date`, Query);\n  return response.data;\n}\n\nconst getContest = async (contestName) => {\n  const response = await axios.get(`${baseUrl}${contestName}`);\n  return response.data;\n}\n\nconst makeContest = async (contestDate) => {\n  const storage = JSON.parse(localStorage.getItem(\"loggedUser\"));\n  if (storage === null) {\n    return [];\n  }\n  const Authorization = `bearer ${storage.token}`;\n  const response = await axios.post(baseUrl, contestDate, { headers: { Authorization }});\n  return response.data;\n}\n\nconst getRanking = async (contestName) => {\n  const response = await axios.get(`${baseUrl}ranking/${contestName}`);\n  return response.data;\n}\n\nconst register = async (contestName) => {\n  const Authorization = `bearer ${JSON.parse(localStorage.getItem(\"loggedUser\"))[\"token\"]}`;\n  const response = await axios.post(`${baseUrl}register/`, {contestName: contestName}, {headers: { Authorization }});\n  return response.data;\n}\n\nconst unregister = async (contestName) => {\n  const Authorization = `bearer ${JSON.parse(localStorage.getItem(\"loggedUser\"))[\"token\"]}`;\n  const response = await axios.post(`${baseUrl}unregister/`, {contestName: contestName}, {headers: { Authorization }});\n  return response.data;\n}\n\nconst checkRegistered = async ({contestName, userid}) => {\n  const response = await axios.post(`${baseUrl}check_registered/`, {contestName: contestName, userid: userid});\n  return response.data;\n}\n\nexport {filterContests, getContest, makeContest, getRanking, register, unregister, checkRegistered};","import { Table} from 'react-bootstrap';\nimport {Link } from \"react-router-dom\";\nimport {filterContests} from \"../services/contests\";\nimport { useState, useEffect } from \"react\";\n\nconst Field = ({fieldName}) => {\n  const Query = {\n    field: fieldName,\n    fromTime: \"2000-01-01 00:00:00\",\n    toTime: \"2100-00-00 00:00:00\"\n  }\n  const [contests, setcontests] = useState(null);\n  useEffect(() => {\n    filterContests(Query).then(res => setcontests(res));\n  },[]);\n  if (contests === null) {\n    return <p>Loading contests...</p>;\n  }\n  return (\n    <div>\n      <h2>{fieldName}</h2>\n      <Table striped>\n      <tbody>\n        {\n          contests.map(contest =>\n          <tr key={contest.name}>\n            <td>\n              <Link to={`/contests/${contest.name}`}>\n                {contest.name}\n              </Link>\n            </td>\n          </tr>\n          )\n        }\n      </tbody>\n      </Table>\n    </div>\n  )\n}\nexport default Field;","import {Nav } from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nconst ContestHeader = ({ contestName, active }) => {\n  return (\n    <Nav variant=\"tabs\" defaultActiveKey={`/contests/${contestName}`}>\n      <Nav.Link href={`/contests/${contestName}`} active={active===\"home\"}>home</Nav.Link>\n      <Nav.Link href={`/contests/${contestName}/problems`} active={active===\"problems\"}>problems</Nav.Link>\n      <Nav.Link href={`/contests/${contestName}/ranking`} active={active===\"ranking\"}>ranking</Nav.Link>\n      <Nav.Link href={`/contests/${contestName}/submissions`} active={active===\"submissions\"}>submissions</Nav.Link>\n    </Nav>\n  )\n}\n\nexport default ContestHeader;","import {Button } from 'react-bootstrap';\nimport { useHistory} from \"react-router-dom\";\n\nconst CreateAccountButton = () => {\n  const history = useHistory();\n  const handleClick = (event) => {\n    event.preventDefault();\n    history.push(`/signup`);\n  }\n  return (\n    <Button variant=\"primary\" onClick={handleClick}>\n      ユーザー登録する\n    </Button>\n  )\n}\n\nexport default CreateAccountButton;","import ContestHeader from \"./Header/ContestHeader\";\nimport { Jumbotron, Button } from 'react-bootstrap';\nimport {getContest, register, unregister} from \"../services/contests\";\nimport { useState, useEffect } from \"react\";\nimport CreateAccountButton from \"./CreateAccountButton\";\n\nconst Contest = ({ contestName }) => {\n  const [contest, setContest] = useState(null);\n  const [isLogedIn, setIsLogedIn] = useState(false);\n  const [registered, setRegistered] = useState(true);\n  const [contestStarted, setContestStarted] = useState(true);\n\n  const handleRegister = (event) => {\n    event.preventDefault();\n    register(contestName);\n    setRegistered(true);\n  }\n  const handleUnregister = (event) => {\n    event.preventDefault();\n    unregister(contestName);\n    setRegistered(false);\n  }\n\n  useEffect(() => {\n    getContest(contestName).then(res => {\n      setContest(res[0]);\n      const storage = JSON.parse(window.localStorage.getItem('loggedUser'));\n      if (storage !== null) {\n        const id = storage.userid;\n        const newRegistered = res[0].ranking.filter((rank) => rank.id === id).length === 0 ? false: true;\n        setRegistered(newRegistered);\n        setIsLogedIn(true);\n        setContestStarted(res[0][\"__v\"]);\n      }\n    });\n  },[]);\n  if (contest === null) {\n    return <div>Loading contests...</div>;\n  }\n  return (\n    <>\n      <ContestHeader contestName={contestName} active=\"home\"/>\n      <div>\n        コンテスト時間:{contest.startTime.substring(0, 16)}〜{contest.endTime.substring(0, 16)}\n      </div>\n      <Jumbotron>\n        <h1>{contest.name}</h1>\n        <div>\n          {contest.description}\n        </div>\n        {!contestStarted && isLogedIn && !registered &&\n          <Button variant=\"primary\" onClick={handleRegister}>登録</Button>\n        }\n        {!contestStarted && isLogedIn && registered &&\n          <Button variant=\"secondary\" onClick={handleUnregister}>登録解除</Button>\n        }\n        {!isLogedIn &&\n          <CreateAccountButton />\n        }\n      </Jumbotron>\n    </>\n  )\n}\nexport default Contest;","import {Link} from \"react-router-dom\";\nimport { Table, Container} from 'react-bootstrap';\nimport {getContest} from \"../services/contests\";\nimport { useState, useEffect } from \"react\";\n\nimport ContestHeader from \"./Header/ContestHeader\";\n\nconst Problems = ({ contestName }) => {\n  const [problemNames, setProblemNames] = useState(null);\n  useEffect(() => {\n    getContest(contestName).then(res => setProblemNames(res[0][\"problemNames\"]));\n  },[]);\n  if (problemNames === null) {\n    return <p>Loading contests...</p>;\n  }\n  return (\n    <div>\n    <ContestHeader contestName={contestName} active=\"problems\"/>\n    <Table bordered>\n    <thead>\n      <tr>\n        <th scope=\"col\"> </th>\n        <th scope=\"col\">問題名</th>\n      </tr>\n    </thead>\n    <tbody>\n      {problemNames.map((name, index) =>\n        <tr key={name}>\n          <th scope=\"row\">{index}</th>\n          <td>\n            <Link to={`/problems/${name}`}>\n              {name}\n            </Link>\n          </td>\n        </tr>\n      )}\n    </tbody>\n    </Table>\n    </div>\n  )\n}\nexport default Problems;","import axios from 'axios'\nconst baseUrl = '/api/submissions/'\n\nconst getUserSubmission = async () => {\n  const storage = JSON.parse(localStorage.getItem(\"loggedUser\"));\n  if (storage === null) {\n    return [];\n  }\n  const Authorization = `bearer ${storage.token}`;\n  const response = await axios.post(`${baseUrl}userid/`, {}, { headers: { Authorization }});\n  return response.data;\n}\n\nconst submit = async (submission) => {\n  const Authorization = `bearer ${JSON.parse(localStorage.getItem(\"loggedUser\"))[\"token\"]}`;\n  const response = await axios.post(baseUrl, submission,  { headers: { Authorization } });\n  return response.data;\n}\n\nexport {getUserSubmission, submit};","import { Form, Button } from 'react-bootstrap';\nimport {useHistory} from \"react-router-dom\";\nimport {submit} from \"../../services/submission\";\nimport { useState, useEffect } from \"react\";\nimport CreateAccountButton from \"../CreateAccountButton\";\n\nconst SimpleInput = ({contestName, problemName}) => {\n  const history = useHistory();\n  const [isLogedIn, setIsLogedIn] = useState(false);\n\n  useEffect(() => {\n    const storage = JSON.parse(window.localStorage.getItem('loggedUser'));\n    if (storage !== null) {\n      setIsLogedIn(true);\n    }\n  },[]);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const answer = event.target[0].value;\n\n    try {\n      const submission = await submit({\n        problemName: problemName,\n        contestName: contestName,\n        answer: answer\n      });\n      history.push(`/contests/${contestName}/submissions`);\n    } \n    catch (exception) {\n      console.log(\"err\");\n    }\n  }\n  return (\n    <>\n    <section>\n      <span>\n        <h3 style={{marginTop: 40, fontWeight: \"bold\"}}>\n          入力\n        </h3>\n      </span>\n    </section>\n    <Form onSubmit={onSubmit}>\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Control as=\"textarea\" rows={1} />\n        {isLogedIn &&\n          <Button variant=\"primary\" type=\"submit\">\n              提出\n          </Button>\n        }\n        {!isLogedIn &&\n          <CreateAccountButton />\n        }\n      </Form.Group>\n    </Form>\n    </>\n  )\n}\n\nexport default SimpleInput;","import SimpleInput from \"./SimpleInput\";\n\nconst JudgeForm = ({judgeType, contestName, problemName}) => {\n  if (judgeType === \"SimpleInput\") {\n    return <SimpleInput contestName={contestName} problemName={problemName}/>;\n  }\n  else {\n    return <div>error</div>;\n  }\n}\n\nexport default JudgeForm;","import axios from 'axios'\nconst baseUrl = '/api/problems/'\n\nconst getProblem = async (problemName) =>\n{\n  const response = await axios.get(`${baseUrl}${problemName}`);\n  return response.data;\n}\n\nconst createProblem = async (problemData) => {\n  const storage = JSON.parse(localStorage.getItem(\"loggedUser\"));\n  if (storage === null) {\n    return [];\n  }\n  const Authorization = `bearer ${storage.token}`;\n  const response = await axios.post(`${baseUrl}`, problemData, { headers: { Authorization }});\n  return response.data;\n}\n\nexport {getProblem, createProblem};","import ContestHeader from \"./Header/ContestHeader\";\nimport JudgeForm from \"./SubmissionForm/JudgeForm\";\nimport {getProblem} from \"../services/problems\";\nimport { useState, useEffect } from \"react\";\n\nconst style = {\n  fontWeight: \"bold\"\n}\n\nconst Problem = ({problemName}) => {\n  const [problem, setProblem] = useState(null);\n  useEffect(() => {\n    getProblem(problemName).then(res => setProblem(res[0]));\n  },[]);\n  if (problem === null) {\n    return <p>Loading contests...</p>;\n  }\n  return (\n    <div>\n      <ContestHeader contestName={problem.contest} />\n      <span>\n        <h2 style={style}>\n          {problem.name}\n        </h2>\n        <hr />\n      </span>\n      <section>\n        <span>\n          <h3 style={style}>\n            問題文\n          </h3>\n        </span>\n        <span>\n          {problem.problemStatement}\n        </span>\n      </section>\n      <JudgeForm judgeType={problem.judgeType} contestName={problem.contest} problemName={problemName}/>\n    </div>\n  )\n}\n\nexport default Problem;","import { Table, Container, Badge } from 'react-bootstrap';\nimport {getUserSubmission} from \"../../services/submission\";\nimport { useState, useEffect } from \"react\";\nimport ContestHeader from \"../Header/ContestHeader\";\n\nconst MySubmissions = ({contestName}) => {\n\n  const [submissions, setSubmissions] = useState(null);\n  useEffect(() => {\n    getUserSubmission()\n      .then(res => {\n        setSubmissions(res.filter((submission => submission.contestName === contestName)).reverse());\n      });\n  }, []);\n\n  if (submissions === null) {\n    return (\n      <div>\n      Loading contests...\n      </div>\n    )\n  }\n  if (submissions.length === 0) {\n    return (\n      <div>\n      提出はありません\n      </div>\n    )\n  }\n  return (\n    <Container>\n      <Table bordered hover>\n        <thead>\n          <tr>\n            <th>problem</th>\n            <th>answer</th>\n            <th>state</th>\n            <th>time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            submissions.map((submission, index) => \n              <tr key={index} className={index === 0 ? (submission[\"state\"]===\"OK\"? \"table-success\": \"table-danger\"): \"table-light\"}>\n                <td>{submission[\"problemName\"]}</td>\n                <td>{submission[\"answer\"]}</td>\n                <td><Badge variant={submission[\"state\"]===\"OK\"? \"success\": \"danger\"} > {submission[\"state\"]} </Badge> </td>\n                <td>{submission[\"time\"]}</td>\n              </tr>\n            )\n          }\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\n\nexport default MySubmissions;","import {Alert } from 'react-bootstrap';\nimport ContestHeader from \"../Header/ContestHeader\";\nimport MySubmissions from \"./MySubmissions\";\n\nconst Submissions = ({contestName}) => {\n  return (\n    <div>\n      <ContestHeader contestName={contestName} active=\"submissions\"/>\n      <Alert variant=\"danger\">\n        現在自分の提出しか見られない仕様になっています。\n      </Alert>\n      <MySubmissions contestName={contestName} />\n    </div>\n  )\n}\n\nexport default Submissions;","import React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport {Link } from \"react-router-dom\";\n\nconst numShow = 20;\n\nconst Ranking = ({ ranking }) => {\n  const [page, setPage] = useState(1);\n  const [visibleRanking, setVisibleRanking] = useState(ranking.slice(0, Math.min(numShow, ranking.length)));\n  const maxPage = Math.ceil(ranking.length / numShow);\n\n  const handlePageMove = (num) => {\n    const newPage = page + num;\n    setPage(newPage);\n    setVisibleRanking(ranking.slice((newPage - 1) * numShow, newPage * numShow));\n  }\n  if (visibleRanking.length === 0) {\n    return (\n      <>\n      <div>参加者は居ません</div>\n      </>\n    )\n  }\n  return (\n    <>\n    {page !== 1 && \n      <input type=\"button\" onClick={() => handlePageMove(-1)} value=\"previous page\" />\n    }\n    {page !== maxPage && \n      <input type=\"button\" onClick={() => handlePageMove(1)} value=\"next page\" />\n    }\n    <Table bordered hover>\n      <thead>\n        <tr>\n          <th>rank</th>\n          <th>username</th>\n          <th>score</th>\n          <th>time</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          visibleRanking.map((rank, index) => \n            <tr key={index}>\n              <td>{(page - 1) * numShow + index + 1}</td>\n              <td><Link to={`/rating/${rank[\"name\"]}`}>{rank[\"name\"]}</Link></td>\n              <td>{rank[\"point\"]}</td>\n              <td>{rank[\"submissionTime\"]}</td>\n            </tr>\n          )\n        }\n      </tbody>\n    </Table>\n    </>\n  )\n}\n\nexport default Ranking;","import React, { useState, useEffect } from 'react';\nimport ContestHeader from \"../Header/ContestHeader\";\nimport {getRanking} from \"../../services/contests\";\nimport Ranking from \"./Ranking\";\n\nconst compare = (a, b) => {\n  if (a.point === b.point) {\n    if (a.submissionTime === b.submissionTime) {\n      return 0;\n    }\n    if (a.submissionTime > b.submissionTime) {\n      return 1;\n    }\n    else {\n      return -1;\n    }\n  }\n  return b.point - a.point;\n}\n\nconst ContestRanking = ({ contestName }) => {\n  const [ranking, setRanking] = useState(null);\n\n  useEffect(\n    () => {\n      getRanking(contestName).then((res) => {\n        res.sort(compare);\n        setRanking(res);\n      });\n    },\n    []\n  )\n\n  if (ranking === null) {\n    return (\n      <>\n      <ContestHeader contestName={contestName} />\n      <div>Loading contests...</div>\n      </>\n    )\n  }\n  if (ranking.length === 0) {\n    return (\n      <>\n      <ContestHeader contestName={contestName} />\n      <div>参加者は居ません</div>\n      </>\n    )\n  }\n  return (\n    <>\n    <ContestHeader contestName={contestName} active=\"ranking\"/>\n    <Ranking ranking={ranking} />\n    </>\n  )\n}\n\nexport default ContestRanking;","import axios from 'axios'\nconst baseUrl = '/api/ratings/'\n\nconst getQuery = async (query) => {\n  const response = await axios.post(`${baseUrl}query/`, query);\n  return response.data;\n}\n\nconst getUserRating = async (userid) => {\n  const response = await axios.get(`${baseUrl}userid/${userid}`)\n  return response.data;\n}\n\nconst getFieldRating = async (fieldName) => {\n  const response = await axios.get(`${baseUrl}fieldName/${fieldName}`)\n  return response.data;\n}\n\nexport {getUserRating, getQuery, getFieldRating};","import { Table} from 'react-bootstrap';\n\nconst RatingTable = ({rate}) => {\n  return (\n    <>\n    <Table bordered hover>\n    <thead>\n      <tr>\n        <th>num</th>\n        <th>contest</th>\n        <th>performance</th>\n        <th>rating</th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n        rate.ratingData.map((datum, index) => {\n          return (\n            <tr key={datum.contestName}>\n              <td>{rate.ratingData.length - index}</td>\n              <td>{datum[\"contestName\"]}</td>\n              <td>{rate.revPref[index]}</td>\n              <td>{rate.revRate[index]}</td>\n            </tr>\n          )\n        })\n      }\n    </tbody>\n    </Table>\n    </>\n  )\n}\nexport default RatingTable;","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst RatingGraph = ({rate}) => {\n  const rateData = [0].concat(rate.revRate.slice().reverse());\n  const labels = [''];\n  for (let index = 1; index <= rateData.length; index++) {\n    if (index === 1 || index % 5 === 0) {\n      labels.push(index.toString());\n    }\n    else {\n      labels.push('');\n    }\n  }\n  labels.push('');\n  const colors = ['rgba(90, 90, 90, 1)', 'rgba(205, 205, 205, 1)', 'rgba(250, 217, 174, 1)', 'rgba(163, 239, 170, 1)', 'rgba(192, 255, 243, 1)', 'rgba(109, 129, 255, 1)', 'rgba(246, 255, 139, 1)', 'rgba(255, 165, 58, 1)', 'rgba(255, 119, 119, 1)'];\n  const background = [];\n  for (let i = 0; i < colors.length; i++) {\n    const colorData = [];\n    for (let index = 0; index < rateData.length + 2; index++) {\n      if (i === colors.length - 1) {\n        colorData.push(5000);\n      }\n      else {\n        colorData.push((i + 1) * 400);\n      }\n    }\n    background.push({colorData: colorData, color: colors[i]});\n  }\n\n  const datasets = [];\n  datasets.push(\n    {\n      type: 'line',\n      borderColor: 'rgba(255, 255, 255, 1)',\n      borderWidth: 3,\n      borderCapStyle: 'round',\n      pointBorderColor: 'rgba(0, 0, 0, 1)',\n      pointBackgroundColor: 'rgba(255, 255, 255, 1)',\n      data: rateData,\n      pointRadius: 4,\n      pointHitRadius: 0,\n      pointBorderWidth: 1,\n      label: \"rate\",\n    }\n  );\n  for (let index = 0; index < background.length; index++) {\n    datasets.push(\n      {\n        type: 'line',\n        data: background[index]['colorData'],\n        fill: true,\n        borderWidth: 0,\n        pointRadius: 0,\n        backgroundColor: background[index]['color'],\n        label: background[index]['color'],\n      }\n    );\n  }\n\n  /** グラフデータ */\n  const graphData = {\n    labels: labels,\n    datasets: datasets,\n  };\n\n  /** グラフオプション */\n  const graphOption = {\n    scales: {\n      x: {\n        beforeFit: true,\n        offset: false,\n      },\n      y: {\n        min: 0,\n        max: Math.ceil(Math.max(...rateData) / 200) * 200 + 200,\n        ticks: {\n          stepSize: 400\n        }\n      },\n    },\n    plugins: {\n      legend: false,\n    },\n    animation: {\n      duration: 0,\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* グラフコンポーネントの呼び出し */}\n      <Bar data={graphData} options={graphOption} />\n    </div>\n  );\n}\n\nexport default RatingGraph;","import { Dropdown, Form } from 'react-bootstrap';\nimport { useState, useEffect } from \"react\";\nimport {getUserRating} from \"../../services/rating\";\nimport RatingTable from \"./RatingTable\";\nimport RatingGraph from \"./RatingGraph\";\n\nconst RatingPage = ({userName}) => {\n  console.log(userName);\n  const storage = JSON.parse(window.localStorage.getItem('loggedUser'));\n  const [rating, setRating] = useState(null);\n  const [rate, setRate] = useState(null);\n  const [userid, setUserid] = useState(userName ? userName : (storage ? storage.userid: \"\"));\n  const onChange = (event) => {\n    event.preventDefault();\n    setUserid(event.target.value);\n  }\n  useEffect(() => {\n    if (userid !== \"\") {\n      getUserRating(userid)\n        .then(res => {\n          res.map((r) => {\n            const revRateData = r.ratingData.slice().reverse();\n            const revPref = [];\n            const revRate = [];\n            for (let index = revRateData.length - 1; index >= 0; index--) {\n              const datum = revRateData[index];\n              if (index === revRateData.length - 1) {\n                const pref = Math.floor((parseInt(datum[\"rating\"]) + 400) * 4 - (1500 + 400) * 3);\n                const rating = Math.floor(Math.max(datum.rating * (revRateData.length - index) / 5, Math.min(datum.rating, Math.max(0, pref / 4) + 400 / 5)));\n                revPref.push(pref);\n                revRate.push(rating);\n              }\n              else if (index >= revRateData.length - 5) {\n                const pref = Math.floor((parseInt(datum[\"rating\"]) + 400) * 4 - (parseInt(revRateData[index + 1][\"rating\"]) + 400) * 3);\n                const rating = Math.floor(Math.max(datum.rating * (revRateData.length - index) / 5, Math.min(datum.rating, Math.max(0, (pref + revRate[revRate.length - 1] * 3) / 4) + 400 * (revRateData.length - index) / 5)));\n                revPref.push(pref);\n                revRate.push(rating);\n              }\n              else {\n                const pref = Math.floor(parseInt(datum[\"rating\"]) * 4 - parseInt(revRateData[index + 1][\"rating\"]) * 3) + 400;\n                const rating = Math.floor(datum.rating) + 400;\n                revPref.push(pref);\n                revRate.push(rating);\n              }\n            }\n            revPref.reverse();\n            revRate.reverse();\n            r.revPref = revPref;\n            r.revRate = revRate;\n            return r;\n          })\n          if (res.length !== 0) {\n            setRating(res);\n            setRate(res[0]);\n          }\n      });\n    }\n  }, [userid]);\n\n  if (rating === null || rate === null) {\n    return (\n      <div style={{paddingTop: 20}}>\n      <Form>\n        <Form.Label>userid</Form.Label>\n        <Form.Control defaultValue={userid} onChange={onChange}/>\n      </Form>\n    </div>\n    )\n  }\n  if (rating.length === 0) {\n    return (\n      <div style={{paddingTop: 20}}>\n      <Form>\n        <Form.Label>userid</Form.Label>\n        <Form.Control defaultValue={userid} onChange={onChange}/>\n      </Form>\n    </div>\n    )\n  }\n\n  const handleClick = (num) => {\n    let newRate = rating[num];\n    setRate(newRate);\n  }\n\n  return (\n    <>\n    <div style={{paddingTop: 20}}>\n      <Form>\n        <Form.Label>userid</Form.Label>\n        <Form.Control defaultValue={userid} onChange={onChange}/>\n      </Form>\n    </div>\n    <Dropdown>\n      <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n        コンテストを選ぶ\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        {\n          rating.map((rate, index) => {\n            return (\n              <Dropdown.Item onClick={() => handleClick(index)} key={rate.fieldName}> {rate.fieldName} </Dropdown.Item>\n            )\n          })\n        }\n      </Dropdown.Menu>\n    </Dropdown>\n    <h1>{rate.fieldName}</h1>\n    <RatingGraph rate={rate} />\n    <RatingTable rate={rate} />\n    </>\n  )\n}\n\nexport default RatingPage;","import {Nav } from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nconst HeaderUser = ({ user, style }) => {\n  if (user.name) {\n    return (\n      <em style={style}>{user.name}</em>\n    );\n  }\n  else {\n    return (\n      <Nav.Link href=\"#\" as=\"span\">\n        <Link to=\"/signup\" style={style}>signup</Link>\n        <Link to=\"/login\" style={style}>login</Link>\n      </Nav.Link>\n    );\n  }\n}\nexport default HeaderUser;","import {Navbar, Nav } from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nimport HeaderUser from \"./HeaderUser\";\n\nconst style = {\n  padding: 5,\n  color: \"white\",\n}\n\nconst Header = ({user}) => {\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" text=\"light\">\n      <Navbar.Brand href=\"/\">Any Contest</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"#\" as=\"span\">\n          <Link style={style} to=\"/fields\">contests</Link>\n          <Link style={style} to=\"/rating\">rating</Link>\n        </Nav.Link>\n      </Nav>\n      <Nav>\n        <HeaderUser user={user} style={style} />\n      </Nav>\n    </Navbar>\n  )\n}\n\nexport default Header;","import axios from 'axios'\nconst baseUrl = '/api/login/'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data;\n}\n\nexport default login;","import {useHistory} from \"react-router-dom\";\nimport {Form, Button} from 'react-bootstrap';\nimport React from 'react';\nimport loginService from \"../services/login\";\n\nconst LoginForm = ({setUser, setMessage}) => {\n  const history = useHistory();\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const id = event.target[0].value;\n    const password = event.target[1].value;\n\n    try {\n      const user = await loginService({\n        id, password,\n      });\n\n      setMessage(`Success: welcome ${id}`);\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      )\n\n      setUser({id: id, name: user.name});\n      setMessage(`Success: welcome ${user.name}`);\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n      history.push('/');\n    } \n    catch (exception) {\n      setMessage('Error: wrong credentials')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>login</h2>\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <Form.Label>id:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"id\"\n          />\n          <Form.Label>password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n          />\n          <Button variant=\"primary\" type=\"submit\">\n            login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm;","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst signup = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data;\n}\n\nexport default signup;","import {useHistory} from \"react-router-dom\";\nimport {Form, Button} from 'react-bootstrap';\nimport React from 'react';\nimport signupService from \"../services/signup\";\n\nconst SignupForm = ({setUser, setMessage}) => {\n  const history = useHistory();\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const id = event.target[0].value;\n    const name = event.target[1].value;\n    const password = event.target[2].value;\n    const confirmePassword = event.target[3].value;\n    if (password !== confirmePassword) {\n      setMessage('Error: 入力されたパスワードが一致しません');\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n      return;\n    }\n    try {\n      const user = await signupService({\n        id, password, name\n      });\n      setUser({id: id, name: name});\n      setMessage(`Success: welcome ${name}`);\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000);\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      )\n      history.push('/');\n    }\n    catch (exception) {\n      setMessage('Error: アカウントを作成出来ませんでした、違うidを試してみてください')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>signup</h2>\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <Form.Label>id:</Form.Label><span class=\"text-danger\">※登録後idは変更出来ません</span>\n          <Form.Control\n            type=\"text\"\n            name=\"id\"\n          />\n          <Form.Label>user name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n          />\n          <Form.Label>password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n          />\n          <Form.Label>confirme password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n          />\n          <Button variant=\"primary\" type=\"submit\">\n            login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default SignupForm;","import {getProblem} from \"../problems\";\n\nconst checkField = (field) => field === \"Debug\";\n\nconst checkContestName = ({contestName, contestAlreadyCreated}) => {\n  if (!contestName || contestName.length === 0) {\n    return false;\n  }\n  return contestAlreadyCreated.filter(name => name === contestName).length === 0;\n}\n\nconst checkDescription = (description) => (description && description.length !== 0);\n\nconst checkDate = (day) => {\n  if (!day) {\n    return false;\n  }\n  if (day.length !== 19) {\n    return false;\n  }\n  if (!Date.parse(day)) {\n    return false;\n  }\n  if (day < \"2021-04-01 00:00:00\" || \"2025-04-01 00:00:00\" < day) {\n    return false;\n  }\n  return true;\n}\n\nconst checkProblems = (problemNames) => (problemNames && problemNames.length !== 0);\n\nconst checkProblem = ({problemName, contestName}) => {\n  const problem = JSON.parse(window.localStorage.getItem('creatingProblems')).filter(problem => problem.name === problemName)[0];\n  if (!problem.answer || problem.answer.length === 0) {\n    return false;\n  }\n  else if (!problem.contest || problem.contest !== contestName) {\n    return false;\n  }\n  else if (!problem.judgeType) {\n    return false;\n  }\n  else if (!problem.name || problem.name.length === 0) {\n    return false;\n  }\n  else if (!problem.point || problem.point < 1|| 3000 < problem.point) {\n    return false;\n  }\n  else if (!problem.problemStatement || problem.problemStatement.length === 0) {\n    return false;\n  }\n  else if (!problem.writer || problem.writer.length === 0) {\n    return false;\n  }\n  return true;\n}\n\nconst checkContest = async ({contest, contestAlreadyCreated, setMessage}) => {\n  if (!checkField(contest.field)) {\n    setMessage(`Error: Debug以外の分野にコンテストは追加出来ません`);\n    setTimeout(() => {\n      setMessage(null)\n    }, 10000)\n  }\n  else if (!checkContestName({contestName: contest.name, contestAlreadyCreated})) {\n    setMessage(`Error: コンテスト名が設定されていないか、すでに存在するコンテスト名です`);\n    setTimeout(() => {\n      setMessage(null)\n    }, 10000)\n  }\n  else if (!checkField(contest.field)) {\n    setMessage(`Error: Debug以外の分野にコンテストは追加出来ません`);\n    setTimeout(() => {\n      setMessage(null)\n    }, 10000)\n  }\n  else if (!checkDescription(contest.description)) {\n    setMessage(`Error: コンテストの説明が設定されていません`);\n    setTimeout(() => {\n      setMessage(null)\n    }, 10000)\n  }\n  else if (!checkDate(contest.startTime) || !checkDate(contest.endTime)) {\n    setMessage(`Error: 開始時間もしくは終了時間が正しく設定されていません`);\n    setTimeout(() => {\n      setMessage(null)\n    }, 10000)\n  }\n  else if (!checkProblems(contest.problemNames)) {\n    setMessage(`Error: 問題が一つも有りません`);\n    setTimeout(() => {\n      setMessage(null)\n    }, 10000)\n  }\n  else {\n    let problemsUnique = true;\n    for (let index = 0; index < contest.problemNames.length; index++) {\n      const problemName = contest.problemNames[index];\n      if (!checkProblem({problemName, contestName: contest.name})) {\n        setMessage(`Error: 問題${problemName}に不足の情報があります`);\n        setTimeout(() => {\n          setMessage(null)\n        }, 10000);\n        break;\n      }\n      const res = await getProblem(problemName);\n      console.log(res);\n      if (res !== \"not found\") {\n        setMessage(`Error: 問題${problemName}がすでに存在するため名前を変えてください`);\n        problemsUnique = false;\n        setTimeout(() => {\n          setMessage(null)\n        }, 10000);\n        break;\n      }\n    }\n    if (problemsUnique) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default checkContest;","const fixTime = (time) => {\n  if (time.length === 1) {\n    return \"0\" + time;\n  }\n  return time;\n}\n\nconst TimeToString = (year, month, day, hour, min, sec) => {\n  const time = `${year}-${fixTime(month)}-${fixTime(day)} ${fixTime(hour)}:${fixTime(min)}:${fixTime(sec)}`;\n  return time;\n}\n\nconst saveData = ({event, contest, contests, setContests, setContest}) => {\n  const contestName = event.target[0].value;\n  const contestDescription = event.target[1].value;\n  const startTime = TimeToString(event.target[2].value, event.target[3].value, event.target[4].value, event.target[5].value, event.target[6].value, event.target[7].value);\n  const endTime = TimeToString(event.target[8].value, event.target[9].value, event.target[10].value, event.target[11].value, event.target[12].value, event.target[13].value);\n  const newContest = {\n    name: contestName,\n    field: \"Debug\",\n    ranking: [],\n    description: contestDescription,\n    minRating: 0,\n    maxRating: 5000,\n    maxperformance: 5000,\n    problemNames: contest.problemNames,\n    startTime: startTime,\n    endTime: endTime,\n    writers: contest.writers,\n    penalty: 300,\n  }\n\n  const already = contests.filter(contest => contest.name === contestName).length !== 0;\n  if (already) {\n    const newContests = contests.map(contest => {\n      if (contest.name === contestName) {\n        return newContest;\n      }\n      return contest;\n    });\n    window.localStorage.setItem(\n      'creatingContests', JSON.stringify(newContests)\n    );\n    setContests(newContests);\n  }\n  else {\n    const newContests = contests.concat(newContest);\n    window.localStorage.setItem(\n      'creatingContests', JSON.stringify(newContests)\n    );\n    setContests(newContests);\n  }\n  setContest(newContest);\n  return newContest;\n}\n\nexport default saveData;\n","import axios from 'axios'\nconst baseUrl = '/api/answers'\n\nconst createAnswer = async (answerData) => {\n  const storage = JSON.parse(localStorage.getItem(\"loggedUser\"));\n  if (storage === null) {\n    return [];\n  }\n  const Authorization = `bearer ${storage.token}`;\n  const response = await axios.post(`${baseUrl}`, answerData, { headers: { Authorization }});\n  return response.data;\n}\n\nexport {createAnswer};","import {createProblem} from \"../problems\";\nimport {createAnswer} from \"../answers\";\n\nconst uploadProblem = async (problemName) => {\n  const Data = JSON.parse(window.localStorage.getItem('creatingProblems')).filter(problem => problem.name === problemName)[0];\n  const problemData = {\n    name: Data.name,\n    point: Data.point,\n    writer: Data.writer,\n    contest: Data.contest,\n    problemStatement: Data.problemStatement,\n    judgeType: Data.judgeType\n  };\n  const answerData = {\n    name: Data.name,\n    answer: Data.answer\n  }\n  await createProblem(problemData);\n  await createAnswer(answerData);\n}\n\nexport default uploadProblem;","import { Form, Button, Col, Table, Alert } from 'react-bootstrap';\nimport { useHistory, Link} from \"react-router-dom\";\nimport {filterContests} from \"../../services/contests\";\nimport { useState, useEffect } from \"react\";\nimport checkContest from \"../../services/CreateContest/checkContest\";\nimport saveData from \"../../services/CreateContest/saveData\";\nimport {makeContest} from \"../../services/contests\";\nimport uploadProblem from \"../../services/CreateContest/uploadProblem\";\n\nconst CreateContest = ({contestName, setMessage}) => {\n  const [contestAlreadyCreated, setContestAlreadyCreated] = useState(null);\n  \n  useEffect(() => {\n    filterContests({fromTime: \"2000-01-01 00:00:00\", toTime: \"2100-01-01 00:00:00\"}).then(res => {\n      setContestAlreadyCreated(res.map(r => r.name))\n    });\n  }, []);\n\n  const history = useHistory();\n  const [contests, setContests] = useState(JSON.parse(window.localStorage.getItem('creatingContests')) !== null ? JSON.parse(window.localStorage.getItem('creatingContests')): []);\n  const [contest, setContest] = useState(contests.filter(contest => contest.name === contestName).length === 0 ? {problemNames: []}: contests.filter(contest => contest.name === contestName)[0]);\n\n  const handlePost = ({event, newContest}) => {\n    checkContest({contest: newContest, contestAlreadyCreated, setMessage}).then(res => {\n      console.log(res);\n      if (res) {\n        makeContest(newContest);\n        newContest.problemNames.forEach(problemName => {\n          uploadProblem(problemName);\n        });\n        history.push(`/fields/Debug`);\n      }\n    });\n  }\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    const problemName = event.target.value;\n    const newProblems = JSON.parse(window.localStorage.getItem('creatingProblems')).filter(problem => problem.name !== problemName);\n    window.localStorage.setItem(\n      'creatingProblems', JSON.stringify(newProblems)\n    );\n    const newProblemNames = contest.problemNames.filter(name => name !== problemName);\n    const newContest = {...contest, problemNames: newProblemNames};\n    setContest(newContest);\n    const newContests = contests.map(contest => {\n      if (contest.problemNames.filter(name => name === problemName).length !== 0) {\n        return newContest;\n      }\n      return contest;\n    })\n    setContests(newContests);\n    window.localStorage.setItem(\n      'creatingContests', JSON.stringify(newContests)\n    );\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const newContest = saveData({event, contest, contests, setContests, setContest});\n    const innerHTML = event.nativeEvent.submitter.innerHTML;\n    if (innerHTML === \"問題を追加する\") {\n      history.push(`/create_problem/`);\n    }\n    if (innerHTML === \"コンテストを公開する\") {\n      handlePost({event, newContest});\n    }\n  }\n\n\n  return (\n    <>\n    <Form style={{paddingTop: 20}} onSubmit={onSubmit}>\n      <Form.Group controlId=\"contestName\">\n        <Form.Label>コンテスト名</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"コンテスト名\" defaultValue={contest.name} />\n      </Form.Group>\n      <Form.Group controlId=\"description\">\n        <Form.Label>説明</Form.Label>\n        <Form.Control as=\"textarea\" rows={3} placeholder=\"コンテストの説明\" defaultValue={contest.description} />\n      </Form.Group>\n      <Form.Label>開始時間</Form.Label>\n      <Form.Row>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>年</Form.Label>\n          <Form.Control placeholder=\"2021\" defaultValue={contest.startTime ? contest.startTime.substring(0, 4): null} />\n        </Col>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>月</Form.Label>\n          <Form.Control placeholder=\"4\" defaultValue={contest.startTime ? contest.startTime.substring(5, 7): null} />\n        </Col>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>日</Form.Label>\n          <Form.Control placeholder=\"1\" defaultValue={contest.startTime ? contest.startTime.substring(8, 10): null} />\n        </Col>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>時</Form.Label>\n          <Form.Control placeholder=\"9\" defaultValue={contest.startTime ? contest.startTime.substring(11, 13): null} />\n        </Col>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>分</Form.Label>\n          <Form.Control placeholder=\"0\" defaultValue={contest.startTime ? contest.startTime.substring(14, 16): null} />\n        </Col>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>秒</Form.Label>\n          <Form.Control placeholder=\"0\" defaultValue={contest.startTime ? contest.startTime.substring(17, 19): null} />\n        </Col>\n      </Form.Row>\n      <Form.Label style={{paddingTop: 20}}>終了時間</Form.Label>\n      <Form.Row>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>年</Form.Label>\n          <Form.Control placeholder=\"2021\" defaultValue={contest.endTime ? contest.endTime.substring(0, 4): null} />\n        </Col>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>月</Form.Label>\n          <Form.Control placeholder=\"4\" defaultValue={contest.endTime ? contest.endTime.substring(5, 7): null} />\n        </Col>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>日</Form.Label>\n          <Form.Control placeholder=\"1\" defaultValue={contest.endTime ? contest.endTime.substring(8, 10): null} />\n        </Col>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>時</Form.Label>\n          <Form.Control placeholder=\"9\" defaultValue={contest.endTime ? contest.endTime.substring(11, 13): null} />\n        </Col>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>分</Form.Label>\n          <Form.Control placeholder=\"0\" defaultValue={contest.endTime ? contest.endTime.substring(14, 16): null} />\n        </Col>\n        <Col>\n          <Form.Label column=\"sm\" lg={2}>秒</Form.Label>\n          <Form.Control placeholder=\"0\" defaultValue={contest.endTime ? contest.endTime.substring(17, 19): null} />\n        </Col>\n      </Form.Row>\n      <div style={{paddingTop:20}}>\n        <Table striped bordered hover>\n          <tbody>\n            {\n              contest.problemNames.map((problem) => \n              <tr key={problem}>\n                <td>\n                <Link to={`/create_problem/${problem}`}>{problem}\n                </Link>\n                </td>\n                <td>\n                <Button variant=\"outline-danger\" value={problem} onClick={handleClick}>\n                  削除\n                </Button>\n                </td>\n              </tr>\n              )\n            }\n          </tbody>\n        </Table>\n      </div>\n\n      <Button variant=\"primary\" type=\"submit\">\n        問題を追加する\n      </Button>\n      <div style={{float: 'right'}}>\n        <Alert variant=\"warning\">\n          *コンテストを公開すると変更出来ないので注意してください\n        </Alert>\n        <Button variant=\"primary\" type=\"submit\">\n          コンテストを公開する\n        </Button>\n      </div>\n    </Form>\n    </>\n  )\n}\nexport default CreateContest;","import {Link, useHistory} from \"react-router-dom\";\nimport { Table, Button } from 'react-bootstrap';\n\nconst SelectContest = () => {\n  const history = useHistory();\n  const contests = JSON.parse(window.localStorage.getItem('creatingContests')) !== null ? JSON.parse(window.localStorage.getItem('creatingContests')): [];\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    history.push(\"/create_contest/tempName\");\n  }\n\n\n  return (\n    <>\n    <h2 style={{paddingTop: 20}}>\n      作成中のコンテスト\n    </h2>\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>contest name</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          contests.map((contest) => \n          <tr key={contest.name}>\n            <td>\n            <Link to={`/create_contest/${contest.name}`}>{contest.name}\n            </Link>\n            </td>\n          </tr>\n          )\n        }\n      </tbody>\n    </Table>\n    <div style={{paddingTop:20}}>\n      <Button variant=\"outline-primary\" block onClick={handleClick}>新しいコンテストを作る</Button>{' '}\n    </div>\n    </>\n  )\n}\nexport default SelectContest;","import { Form, Button, Dropdown } from 'react-bootstrap';\nimport { useState } from \"react\";\nimport { useHistory} from \"react-router-dom\";\n\nconst CreateProblem = ({problemName}) => {\n  const history = useHistory();\n  const [contests, setContests] = useState(JSON.parse(window.localStorage.getItem('creatingContests')) !== null ? JSON.parse(window.localStorage.getItem('creatingContests')): []);\n  const [problems, setProblems] = useState(JSON.parse(window.localStorage.getItem('creatingProblems')) !== null ? JSON.parse(window.localStorage.getItem('creatingProblems')): []);\n\n  const filteredProblems = problems.filter(problem => problem.name === problemName);\n  const problem = filteredProblems.length === 0 ? {}: filteredProblems[0];\n  const [contestName, setContestName] = useState('コンテストを選ぶ');\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    setContestName(event.target.text.substring(1, event.target.text.length - 1));\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const problemName = event.target[0].value;\n    const problemStatement = event.target[1].value;\n    const answer = event.target[2].value;\n    const point = event.target[3].value;\n    const newProblem = {\n      name: problemName,\n      point: parseInt(point), \n      writer: JSON.parse(window.localStorage.getItem('loggedUser'))['name'],\n      contest: contestName,\n      answer: answer,\n      problemStatement: problemStatement,\n      judgeType: 'SimpleInput',\n    }\n    const already = problems.filter(problem => problem.name === problemName).length !== 0;\n    console.log(already);\n    if (already) {\n      const newProblems = problems.map(problem => {\n        if (problem.name === problemName) {\n          return newProblem;\n        }\n        return problem;\n      });\n      setProblems(newProblems);\n      window.localStorage.setItem(\n        'creatingProblems', JSON.stringify(newProblems)\n      );\n    }\n    else {\n      const newProblems = problems.concat([newProblem]);\n      setProblems(newProblems);\n      window.localStorage.setItem(\n        'creatingProblems', JSON.stringify(newProblems)\n      );\n    }\n    \n    const newContests = contests.map((contest) => {\n      if (contest.name === contestName) {\n        if (contest.problemNames.filter(prob => prob === problemName).length === 0) {\n          contest.problemNames.push(problemName);\n        }\n      }\n      return contest;\n    });\n    setContests(newContests);\n    window.localStorage.setItem(\n      'creatingContests', JSON.stringify(newContests)\n    );\n    history.push(`/create_contest/${contestName}`);\n  }\n\n  return (\n    <>\n    <div style={{paddingTop: 20}}>\n      コンテスト名\n    </div>\n    <Dropdown>\n      <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n        {contestName}\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        {\n          contests.map((contest, index) => {\n            return (\n              <Dropdown.Item onClick={handleClick} key={contest.name}> {contest.name} </Dropdown.Item>\n            )\n          })\n        }\n      </Dropdown.Menu>\n    </Dropdown>\n    <Form onSubmit={onSubmit}>\n      <Form.Group controlId=\"problemName\">\n        <Form.Label>問題名</Form.Label>\n        <Form.Control placeholder=\"50文字以下\" defaultValue={problemName} />\n      </Form.Group>\n      <Form.Group controlId=\"problemStatement\">\n        <Form.Label>問題文</Form.Label>\n        <Form.Control as=\"textarea\" row={3} placeholder=\"1000文字以下\" defaultValue={problem.problemStatement} />\n      </Form.Group>\n      <Form.Group controlId=\"answer\">\n        <Form.Label>答え</Form.Label>\n        <Form.Control as=\"textarea\" row={3} placeholder=\"500文字以下\" defaultValue={problem.answer} />\n      </Form.Group>\n      <Form.Group controlId=\"point\">\n        <Form.Label>点数</Form.Label>\n        <Form.Control placeholder=\"1〜3000の間\" defaultValue={problem.point} />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        問題を追加\n      </Button>\n    </Form>\n    </>\n  )\n}\nexport default CreateProblem;","import React, { useState, useEffect } from 'react';\nimport { Alert, Container } from 'react-bootstrap';\n\nimport {\n  Switch,\n  Route,\n  Redirect,\n  useRouteMatch,\n} from \"react-router-dom\";\n\nimport HomeForm from \"./components/HomeForm\";\nimport Fields from \"./components/Fields\";\nimport Field from \"./components/Field\";\nimport Contest from \"./components/Contest\";\nimport Problems from \"./components/Problems\";\nimport Problem from \"./components/Problem\";\nimport Submissions from \"./components/Submission/Submissions\";\nimport ContestRanking from \"./components/Ranking/ContestRankingPage\";\nimport RatingPage from \"./components/Rating/RatingPage\";\nimport Header from './components/Header/Header';\nimport LoginForm from './components/LoginForm';\nimport SignupForm from './components/SignupForm';\nimport CreateContestForm from './components/CreateContest/CreateContestForm';\nimport SelectContest from './components/CreateContest/SelectContest';\nimport CreateContest from './components/CreateProblem/CreateProblem';\nimport CreateProblem from './components/CreateProblem/CreateProblem';\n\nconst Users = () => (\n  <div>\n    <h2>TKTL notes app</h2>\n    <ul>\n      <li>Matti Luukkainen</li>\n      <li>Juha Tauriainen</li>\n      <li>Arto Hellas</li>\n    </ul>\n  </div>\n)\n\nconst App = () => {\n  const [user, setUser] = useState({});\n  const [message, setMessage] = useState(null);\n\n  \n  const matchField = useRouteMatch('/fields/:field');\n  const fieldName = matchField ? matchField.params.field: null;\n  \n  const matchContest = useRouteMatch('/contests/:contest');\n  const contestName = matchContest ? matchContest.params.contest: null;\n\n  const matchProblem = useRouteMatch('/problems/:problem');\n  const problemName = matchProblem ? matchProblem.params.problem: null;\n\n  const matchCreateContest = useRouteMatch('/create_contest/:contestName');\n  const createContestName = matchCreateContest ? matchCreateContest.params.contestName: null;\n\n  const matchCreateProblem = useRouteMatch('/create_problem/:problemName');\n  const createProblemName = matchCreateProblem ? matchCreateProblem.params.problemName: null;\n\n  const matchUserName = useRouteMatch('/rating/:userName');\n  const ratingUserName = matchUserName ? matchUserName.params.userName: null;\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n    }\n  }, [])\n\n  return (\n    <div>\n        {(message && message.startsWith(\"Success:\") && \n          <Alert variant=\"success\">\n            {message}\n          </Alert>\n        )}\n        {(message && message.startsWith(\"Error:\") && \n          <Alert variant=\"danger\">\n            {message}\n          </Alert>\n        )}\n      \n      <Header user={user} />\n      <Container>\n        <Switch>\n          <Route path=\"/fields/:field\">\n            <Field fieldName={fieldName} />\n          </Route>\n          <Route path=\"/contests/:contest/problems\">\n            <Problems contestName={contestName} />\n          </Route>\n          <Route path=\"/contests/:contest/submissions\">\n            <Submissions contestName={contestName} />\n          </Route>\n          <Route path=\"/contests/:contest/ranking\">\n            <ContestRanking contestName={contestName}/>\n          </Route>\n          <Route path=\"/contests/:contest\">\n            <Contest contestName={contestName} />\n          </Route>\n          <Route path=\"/problems/:problem\">\n            <Problem problemName={problemName} />\n          </Route>\n          <Route path=\"/fields\">\n            <Fields />\n          </Route>\n          <Route path=\"/users\">\n            {user ? <Users /> : <Redirect to=\"/login\" />}\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm setUser={(userData) => setUser(userData)} setMessage={(messageData) => setMessage(messageData)} />\n          </Route>\n          <Route path=\"/signup\">\n            <SignupForm setUser={(userData) => setUser(userData)} setMessage={(messageData) => setMessage(messageData)} />\n          </Route>\n          <Route path=\"/rating/:userName\">\n            <RatingPage userName={ratingUserName}/>\n          </Route>\n          <Route path=\"/rating\">\n            <RatingPage />\n          </Route>\n          <Route path=\"/create_contest/:contestName\">\n            <CreateContestForm contestName={createContestName} setMessage={(messageData) => setMessage(messageData)} />\n          </Route>\n          <Route path=\"/create_contest\">\n            <SelectContest />\n          </Route>\n          <Route path=\"/create_problem/:problemName\">\n            <CreateProblem problemName={createProblemName}/>\n          </Route>\n          <Route path=\"/create_problem/\">\n            <CreateProblem />\n          </Route>\n          <Route path=\"/\">\n            <HomeForm />\n          </Route>\n        </Switch>\n        <div>\n          <br />\n          <em>kuso app</em>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport {BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}